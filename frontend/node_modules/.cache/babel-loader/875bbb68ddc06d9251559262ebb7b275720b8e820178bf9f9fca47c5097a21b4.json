{"ast":null,"code":"var _jsxFileName = \"/Users/sumanthroyal/Documents/Develup/DevelUp-analytics/frontend/src/components/ApplicantAnalytics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../services/api'; // Assuming you have this service set up\nimport './applicantAnalytics.css';\nimport Modal from 'react-modal';\nimport { Bar } from 'react-chartjs-2'; // Import Bar chart from react-chartjs-2\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport moment from 'moment';\n\n// Register components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\n// Attach modal to the root of your app\nModal.setAppElement('#root');\nfunction ApplicantAnalytics() {\n  _s();\n  const [totalApplicants, setTotalApplicants] = useState(0);\n  const [applicantsByJob, setApplicantsByJob] = useState([]);\n  const [applicantsByStatus, setApplicantsByStatus] = useState([]);\n  const [statusPeriod, setStatusPeriod] = useState('daily'); // Default to 'daily'\n  const [statusDate, setStatusDate] = useState(moment().format('YYYY-MM-DD')); // Default to today\n  const [interviewsScheduled, setInterviewsScheduled] = useState(0);\n  const [offerLettersScheduled, setOfferLettersScheduled] = useState(0);\n  const [rejectedApplicants, setRejectedApplicants] = useState(0);\n  const [applicationsByMonth, setApplicationsByMonth] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [modalContent, setModalContent] = useState({\n    title: '',\n    data: []\n  });\n  const [chartData, setChartData] = useState(null); // State for bar chart data\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [totalResponse, jobResponse, statusResponse, interviewsResponse, offerLettersResponse, rejectedResponse, monthResponse] = await Promise.all([api.get('/applicants/total-applicants'), api.get('/applicants/applicants-by-job'), api.get(`/applicants/applicants-by-status?type=${statusPeriod}&date=${statusDate}`),\n        // Fetch based on selected period and date\n        api.get('/applicants/interviews-scheduled'), api.get('/applicants/offer-letters-scheduled'), api.get('/applicants/rejected-applicants'), api.get('/applicants/applications-by-month')]);\n        setTotalApplicants(totalResponse.data.total);\n        setApplicantsByJob(jobResponse.data);\n        setApplicantsByStatus(statusResponse.data);\n        setInterviewsScheduled(interviewsResponse.data.total);\n        setOfferLettersScheduled(offerLettersResponse.data.total);\n        setRejectedApplicants(rejectedResponse.data.total);\n        setApplicationsByMonth(monthResponse.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [statusPeriod, statusDate]);\n  const openModal = (title, data) => {\n    setModalContent({\n      title,\n      data\n    });\n\n    // Prepare bar chart data if the modal is for Applications by Month\n    if (title === 'Applications by Month' || 'Applicants by Status') {\n      const labels = data.map(item => `${item._id.year}-${item._id.month}`);\n      const counts = data.map(item => item.count);\n      setChartData({\n        labels: labels,\n        datasets: [{\n          label: 'Applications',\n          backgroundColor: 'rgba(75, 192, 192, 0.6)',\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(75, 192, 192, 0.8)',\n          hoverBorderColor: 'rgba(75, 192, 192, 1)',\n          data: counts\n        }]\n      });\n    } else {\n      setChartData(null); // Clear chart data for other modals\n    }\n    setModalIsOpen(true);\n  };\n  const closeModal = () => {\n    setModalIsOpen(false);\n    setChartData(null); // Reset chart data when modal is closed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"applicant-analytics-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Applicant Analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Total Applicants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: totalApplicants\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Applicants by Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: applicantsByJob.slice(0, 10).map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Job: \", item.job_title, \", \", item.company_name, \", Count: \", item.count]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => openModal('Applicants by Job', applicantsByJob),\n        children: \"Show Detailed Analytics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Applicants by Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Select Date: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: statusDate,\n          onChange: e => setStatusDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Select Period: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: statusPeriod,\n          onChange: e => setStatusPeriod(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"daily\",\n            children: \"Daily\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"weekly\",\n            children: \"Weekly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"monthly\",\n            children: \"Monthly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"yearly\",\n            children: \"Yearly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: applicantsByStatus.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Status: \", item._id, \", Count: \", item.count]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => openModal('Applicants by Status', applicantsByStatus),\n        children: \"Show Detailed Analytics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Interviews Scheduled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: interviewsScheduled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Offer Letters Scheduled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: offerLettersScheduled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Rejected Applicants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: rejectedApplicants\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Applications by Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: applicationsByMonth.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item._id.year, \"-\", item._id.month, \": \", item.count]\n        }, item._id.year + item._id.month, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => openModal('Applications by Month', applicationsByMonth),\n        children: \"Show Detailed Analytics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      className: \"modal\",\n      overlayClassName: \"modal-overlay\",\n      ariaHideApp: false // For accessibility\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeModal,\n        className: \"modal-close\",\n        \"aria-label\": \"Close modal\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: modalContent.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), chartData ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '400px'\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(Bar, {\n          data: chartData,\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n              legend: {\n                display: true,\n                position: 'top'\n              }\n            },\n            scales: {\n              x: {\n                title: {\n                  display: true,\n                  text: 'Month'\n                }\n              },\n              y: {\n                title: {\n                  display: true,\n                  text: 'Count'\n                }\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: modalContent.data.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.job_title, \", \", item.company_name, \" : \", item.count]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(ApplicantAnalytics, \"9ev/C4TDWRw//jx2eTJjJzo5AAY=\");\n_c = ApplicantAnalytics;\nexport default ApplicantAnalytics;\nvar _c;\n$RefreshReg$(_c, \"ApplicantAnalytics\");","map":{"version":3,"names":["React","useState","useEffect","api","Modal","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","moment","jsxDEV","_jsxDEV","register","setAppElement","ApplicantAnalytics","_s","totalApplicants","setTotalApplicants","applicantsByJob","setApplicantsByJob","applicantsByStatus","setApplicantsByStatus","statusPeriod","setStatusPeriod","statusDate","setStatusDate","format","interviewsScheduled","setInterviewsScheduled","offerLettersScheduled","setOfferLettersScheduled","rejectedApplicants","setRejectedApplicants","applicationsByMonth","setApplicationsByMonth","modalIsOpen","setModalIsOpen","modalContent","setModalContent","title","data","chartData","setChartData","fetchData","totalResponse","jobResponse","statusResponse","interviewsResponse","offerLettersResponse","rejectedResponse","monthResponse","Promise","all","get","total","error","console","openModal","labels","map","item","_id","year","month","counts","count","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","closeModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","job_title","company_name","onClick","type","value","onChange","e","target","isOpen","onRequestClose","overlayClassName","ariaHideApp","style","height","options","responsive","maintainAspectRatio","plugins","legend","display","position","scales","x","text","y","index","_c","$RefreshReg$"],"sources":["/Users/sumanthroyal/Documents/Develup/DevelUp-analytics/frontend/src/components/ApplicantAnalytics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport api from '../services/api';  // Assuming you have this service set up\nimport './applicantAnalytics.css';\nimport Modal from 'react-modal';\nimport { Bar } from 'react-chartjs-2';  // Import Bar chart from react-chartjs-2\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport moment from 'moment';\n\n// Register components\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\n// Attach modal to the root of your app\nModal.setAppElement('#root');\n\nfunction ApplicantAnalytics() {\n  const [totalApplicants, setTotalApplicants] = useState(0);\n  const [applicantsByJob, setApplicantsByJob] = useState([]);\n  const [applicantsByStatus, setApplicantsByStatus] = useState([]);\n  const [statusPeriod, setStatusPeriod] = useState('daily');  // Default to 'daily'\n  const [statusDate, setStatusDate] = useState(moment().format('YYYY-MM-DD'));  // Default to today\n  const [interviewsScheduled, setInterviewsScheduled] = useState(0);\n  const [offerLettersScheduled, setOfferLettersScheduled] = useState(0);\n  const [rejectedApplicants, setRejectedApplicants] = useState(0);\n  const [applicationsByMonth, setApplicationsByMonth] = useState([]);\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [modalContent, setModalContent] = useState({ title: '', data: [] });\n  const [chartData, setChartData] = useState(null);  // State for bar chart data\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [totalResponse, jobResponse, statusResponse, interviewsResponse, offerLettersResponse, rejectedResponse, monthResponse] = await Promise.all([\n          api.get('/applicants/total-applicants'),\n          api.get('/applicants/applicants-by-job'),\n          api.get(`/applicants/applicants-by-status?type=${statusPeriod}&date=${statusDate}`), // Fetch based on selected period and date\n          api.get('/applicants/interviews-scheduled'),\n          api.get('/applicants/offer-letters-scheduled'),\n          api.get('/applicants/rejected-applicants'),\n          api.get('/applicants/applications-by-month'),\n        ]);\n\n        setTotalApplicants(totalResponse.data.total);\n        setApplicantsByJob(jobResponse.data);\n        setApplicantsByStatus(statusResponse.data);\n        setInterviewsScheduled(interviewsResponse.data.total);\n        setOfferLettersScheduled(offerLettersResponse.data.total);\n        setRejectedApplicants(rejectedResponse.data.total);\n        setApplicationsByMonth(monthResponse.data);\n\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, [statusPeriod, statusDate]);\n\n  const openModal = (title, data) => {\n    setModalContent({ title, data });\n\n    // Prepare bar chart data if the modal is for Applications by Month\n    if (title === 'Applications by Month' || 'Applicants by Status') {\n      const labels = data.map(item => `${item._id.year}-${item._id.month}`);\n      const counts = data.map(item => item.count);\n\n      setChartData({\n        labels: labels,\n        datasets: [\n          {\n            label: 'Applications',\n            backgroundColor: 'rgba(75, 192, 192, 0.6)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgba(75, 192, 192, 0.8)',\n            hoverBorderColor: 'rgba(75, 192, 192, 1)',\n            data: counts,\n          },\n        ],\n      });\n    } else {\n      setChartData(null);  // Clear chart data for other modals\n    }\n\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n    setChartData(null);  // Reset chart data when modal is closed\n  };\n\n  return (\n    <div className=\"applicant-analytics-container\">\n      <h1>Applicant Analytics</h1>\n      \n      <div className=\"analytics-card\">\n        <h2>Total Applicants</h2>\n        <p>{totalApplicants}</p>\n      </div>\n\n      <div className=\"analytics-card\">\n        <h2>Applicants by Job</h2>\n        <ul>\n          {applicantsByJob.slice(0, 10).map(item => (\n            <li key={item._id}>Job: {item.job_title}, {item.company_name}, Count: {item.count}</li>\n          ))}\n        </ul>\n        <button onClick={() => openModal('Applicants by Job', applicantsByJob)}>Show Detailed Analytics</button>\n      </div>\n\n      <div className=\"analytics-card\">\n        <h2>Applicants by Status</h2>\n\n        {/* Date and Period Select */}\n        <div>\n          <label>Select Date: </label>\n          <input\n            type=\"date\"\n            value={statusDate}\n            onChange={(e) => setStatusDate(e.target.value)}\n          />\n          <label>Select Period: </label>\n          <select\n            value={statusPeriod}\n            onChange={(e) => setStatusPeriod(e.target.value)}\n          >\n            <option value=\"daily\">Daily</option>\n            <option value=\"weekly\">Weekly</option>\n            <option value=\"monthly\">Monthly</option>\n            <option value=\"yearly\">Yearly</option>\n          </select>\n        </div>\n\n        <ul>\n          {applicantsByStatus.map(item => (\n            <li key={item._id}>Status: {item._id}, Count: {item.count}</li>\n          ))}\n        </ul>\n\n        <button onClick={() => openModal('Applicants by Status', applicantsByStatus)}>Show Detailed Analytics</button>\n      </div>\n\n      <div className=\"analytics-card\">\n        <h2>Interviews Scheduled</h2>\n        <p>{interviewsScheduled}</p>\n      </div>\n\n      <div className=\"analytics-card\">\n        <h2>Offer Letters Scheduled</h2>\n        <p>{offerLettersScheduled}</p>\n      </div>\n\n      <div className=\"analytics-card\">\n        <h2>Rejected Applicants</h2>\n        <p>{rejectedApplicants}</p>\n      </div>\n\n      {/* Applications by Month with modal and chart */}\n      <div className=\"analytics-card\">\n        <h2>Applications by Month</h2>\n        <ul>\n          {applicationsByMonth.map(item => (\n            <li key={item._id.year + item._id.month}>\n              {item._id.year}-{item._id.month}: {item.count}\n            </li>\n          ))}\n        </ul>\n        <button onClick={() => openModal('Applications by Month', applicationsByMonth)}>Show Detailed Analytics</button>\n      </div>\n\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        className=\"modal\"\n        overlayClassName=\"modal-overlay\"\n        ariaHideApp={false}  // For accessibility\n      >\n        <button onClick={closeModal} className=\"modal-close\" aria-label=\"Close modal\">×</button>\n        <h2>{modalContent.title}</h2>\n        \n        {chartData ? (\n          <div style={{ height: '400px' }}> {/* Set a height for the chart */}\n            <Bar \n              data={chartData} \n              options={{\n                responsive: true,\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: true,\n                    position: 'top',\n                  },\n                },\n                scales: {\n                  x: { title: { display: true, text: 'Month' } },\n                  y: { title: { display: true, text: 'Count' } }\n                },\n              }} \n            />\n          </div>\n        ) : (\n          <ul>\n            {modalContent.data.map((item, index) => (\n              <li key={index}>{item.job_title}, {item.company_name} : {item.count}</li>\n            ))}\n          </ul>\n        )}\n      </Modal>\n    </div>\n  );\n}\n\nexport default ApplicantAnalytics;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}